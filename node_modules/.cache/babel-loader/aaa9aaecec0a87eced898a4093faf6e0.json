{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sifatul/workstation/sifatul.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/sifatul/workstation/sifatul.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/sifatul/workstation/sifatul.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Firebase from'firebase';// import React from 'react';\nvar config={apiKey:\"AIzaSyDQLQYBI8C7Ya13pv8ibtrKqCt-YFkKuv8\",authDomain:\"githubpage-fa457.firebaseapp.com\",databaseURL:\"https://githubpage-fa457.firebaseio.com\"};try{Firebase.initializeApp(config);}catch(e){console.error(e);}var getProjects=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var database,starCountRef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:database=Firebase.database();starCountRef=database.ref('Jobs');return _context.abrupt(\"return\",new Promise(function(resolve,reject){starCountRef.on('value',function(snapshot){var data=snapshot.val();if(!data)reject([]);console.log(data);var projects=[];for(var com in data){var _projects;var temp=data[com].projects;projects=(_projects=projects).concat.apply(_projects,_toConsumableArray(temp));}resolve(projects||[]);resolve(projects||[]);});}));case 3:case\"end\":return _context.stop();}}},_callee);}));return function getProjects(){return _ref.apply(this,arguments);};}();var getBasicInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var database,starCountRef;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:database=Firebase.database();starCountRef=database.ref('basicInfo');return _context2.abrupt(\"return\",new Promise(function(resolve,reject){starCountRef.on('value',function(snapshot){var data=snapshot.val();console.log(\"basic data\",data);if(!data)reject([]);console.log(data);resolve(data);});}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function getBasicInfo(){return _ref2.apply(this,arguments);};}();export{getProjects,getBasicInfo};","map":{"version":3,"sources":["/Users/sifatul/workstation/sifatul.github.io/src/lib/Firebase.js"],"names":["Firebase","config","apiKey","authDomain","databaseURL","initializeApp","e","console","error","getProjects","database","starCountRef","ref","Promise","resolve","reject","on","snapshot","data","val","log","projects","com","temp","concat","getBasicInfo"],"mappings":"8eAAA,MAAOA,CAAAA,QAAP,KAAqB,UAArB,CACA;AAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,kCAFC,CAGbC,WAAW,CAAE,yCAHA,CAAf,CAKA,GAAI,CACFJ,QAAQ,CAACK,aAAT,CAAuBJ,MAAvB,EACD,CACD,MAAOK,CAAP,CAAU,CACRC,OAAO,CAACC,KAAR,CAAcF,CAAd,EACD,CACD,GAAMG,CAAAA,WAAW,0FAAG,6JACdC,QADc,CACHV,QAAQ,CAACU,QAAT,EADG,CAEdC,YAFc,CAECD,QAAQ,CAACE,GAAT,CAAa,MAAb,CAFD,iCAGX,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCJ,YAAY,CAACK,EAAb,CAAgB,OAAhB,CAAyB,SAAUC,QAAV,CAAoB,CAC3C,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,GAAT,EAAb,CACA,GAAI,CAACD,IAAL,CAAWH,MAAM,CAAC,EAAD,CAAN,CACXR,OAAO,CAACa,GAAR,CAAYF,IAAZ,EACA,GAAIG,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBJ,CAAAA,IAAhB,CAAsB,eACpB,GAAMK,CAAAA,IAAI,CAAGL,IAAI,CAACI,GAAD,CAAJ,CAAUD,QAAvB,CACAA,QAAQ,CAAG,WAAAA,QAAQ,EAACG,MAAT,oCAAmBD,IAAnB,EAAX,CAED,CACDT,OAAO,CAACO,QAAQ,EAAI,EAAb,CAAP,CAEAP,OAAO,CAACO,QAAQ,EAAI,EAAb,CAAP,CACD,CAbD,EAeD,CAhBM,CAHW,wDAAH,kBAAXZ,CAAAA,WAAW,0CAAjB,CAqBA,GAAMgB,CAAAA,YAAY,2FAAG,kKACff,QADe,CACJV,QAAQ,CAACU,QAAT,EADI,CAEfC,YAFe,CAEAD,QAAQ,CAACE,GAAT,CAAa,WAAb,CAFA,kCAGZ,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCJ,YAAY,CAACK,EAAb,CAAgB,OAAhB,CAAyB,SAAUC,QAAV,CAAoB,CAC3C,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,GAAT,EAAb,CACAZ,OAAO,CAACa,GAAR,CAAY,YAAZ,CAA0BF,IAA1B,EACA,GAAI,CAACA,IAAL,CAAWH,MAAM,CAAC,EAAD,CAAN,CACXR,OAAO,CAACa,GAAR,CAAYF,IAAZ,EACAJ,OAAO,CAACI,IAAD,CAAP,CACD,CAND,EAOD,CARM,CAHY,0DAAH,kBAAZO,CAAAA,YAAY,2CAAlB,CAaA,OAAShB,WAAT,CAAsBgB,YAAtB","sourcesContent":["import Firebase from 'firebase';\n// import React from 'react';\n\nconst config = {\n  apiKey: \"AIzaSyDQLQYBI8C7Ya13pv8ibtrKqCt-YFkKuv8\",\n  authDomain: \"githubpage-fa457.firebaseapp.com\",\n  databaseURL: \"https://githubpage-fa457.firebaseio.com\",\n}\ntry {\n  Firebase.initializeApp(config);\n}\ncatch (e) {\n  console.error(e)\n}\nconst getProjects = async () => {\n  var database = Firebase.database();\n  var starCountRef = database.ref('Jobs');\n  return new Promise((resolve, reject) => {\n    starCountRef.on('value', function (snapshot) {\n      const data = snapshot.val();\n      if (!data) reject([]);\n      console.log(data);\n      let projects = [];\n      for (let com in data) {\n        const temp = data[com].projects;\n        projects = projects.concat(...temp)\n        \n      }\n      resolve(projects || [])\n\n      resolve(projects || [])\n    });\n\n  })\n}\nconst getBasicInfo = async () => {\n  var database = Firebase.database();\n  var starCountRef = database.ref('basicInfo');\n  return new Promise((resolve, reject) => {\n    starCountRef.on('value', function (snapshot) {\n      const data = snapshot.val();\n      console.log(\"basic data\", data);\n      if (!data) reject([]);\n      console.log(data);\n      resolve(data)\n    })\n  })\n}\nexport { getProjects, getBasicInfo };\n"]},"metadata":{},"sourceType":"module"}